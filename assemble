#!/bin/bash
echo "Assemble script"

# we will move any code provided by s2i to here
LOCAL_SOURCE_DIR=${HOME}/source

# Copy the source for compilation
if compgen -G "/tmp/src/*" >/dev/null; then
  mkdir -p $LOCAL_SOURCE_DIR
  cp -ad /tmp/src/* $LOCAL_SOURCE_DIR
fi

echo ">>> Managing incremental build" 
if [ -d /tmp/artifacts ]; then
    echo "Expanding artifacts from incremental build..."
    ( cd /tmp/artifacts && tar cf - . ) | ( cd ${HOME} && tar xvf - )
    rm -rf /tmp/artifacts
fi

# If a pom.xml is present, this is a normal build scenario
# so run maven.
if [ -f "$LOCAL_SOURCE_DIR/pom.xml" ]; then
  echo ">>> FOUND pom.xml file on ${LOCAL_SOURCE_DIR}/pom.xml"
  pushd $LOCAL_SOURCE_DIR &> /dev/null

#  MAVEN_ARGS=${MAVEN_ARGS--e -Popenshift -DskipTests -Dcom.redhat.xpaas.repo.redhatga package}
  MAVEN_ARGS="clean package"

  # Always force IPv4 (CLOUD-188)
  # Append user-supplied arguments (CLOUD-412)
  MAVEN_ARGS="$MAVEN_ARGS -Djava.net.preferIPv4Stack=true ${MAVEN_ARGS_APPEND}"

  echo ">>> Found pom.xml... attempting to build with 'mvn ${MAVEN_ARGS}'"

  echo ">>> Using $($MAVEN_HOME/bin/mvn --version)"

  # Execute the actual build
  ${MAVEN_HOME}/bin/mvn $MAVEN_ARGS

  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "### Aborting due to error code $ERR from Maven build"
    exit $ERR
  fi

  echo ">>> NO ERRORS. Coping from target/folder to ${HOME}"

  # Copy built artifacts to home Directory
  cp ${LOCAL_SOURCE_DIR}/target/*.jar ${HOME}

  # optionally clear the local maven repository after the build
  #clear_maven_repository
  echo ">>> Clear the maven repository"
  rm -rf ${HOME}/.m2/repository/*

  popd &> /dev/null
#else
#  copy_artifacts "." war ear rar jar
fi

exit 0

#mv /tmp/src/helloworld-2.0-jar-with-dependencies.jar /opt/uberjar
